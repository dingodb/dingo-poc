// Copyright (c) 2023 dingodb.com, Inc. All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "common.proto";
import "error.proto";

package dingodb.pb.coordinator;

option java_package = "org.dingo.coordinator";
option cc_generic_services = true;

// Store report self status and region (this node is leader) status
message StoreHeartbeatRequest {
  uint64 self_storemap_epoch = 1;     // storemap epoch in this Store
  uint64 self_regionmap_epoch = 2;    // regionmap epoch in this Store
  dingodb.pb.common.Store store = 3;  // self store info
  repeated dingodb.pb.common.Region regions = 4;  // self region info
}

message StoreHeartbeatResponse {
  dingodb.pb.error.Error error = 1;
  uint64 storemap_epoch = 2;                  // the lates epoch of storemap
  uint64 regionmap_epoch = 3;                 // the lates epoch of regionmap
  dingodb.pb.common.StoreMap storemap = 4;    // new storemap
  dingodb.pb.common.RegionMap regionmap = 5;  // new regionmap
}

message HelloRequest {
  uint64 hello = 1;
}

message HelloResponse {
  dingodb.pb.error.Error error = 1;
  dingodb.pb.common.CoordinatorState state = 2;
  string status_detail = 3;
}

message GetRegionMapRequest {
  uint64 epoch = 1;
}

message GetRegionMapResponse {
  dingodb.pb.error.Error error = 1;
  uint64 epoch = 2;
  dingodb.pb.common.RegionMap regionmap = 3;
}

message GetStoreMapRequest {
  uint64 epoch = 1;
}

message GetStoreMapResponse {
  dingodb.pb.error.Error error = 1;
  uint64 epoch = 2;
  dingodb.pb.common.StoreMap storemap = 3;
}

message CreateStoreRequest {
  uint64 cluster_id = 1;
}

message CreateStoreResponse {
  dingodb.pb.error.Error error = 1;
  uint64 store_id = 2;
  string password = 3;
}

service CoordinatorService {
  // Hello
  rpc Hello(HelloRequest) returns (HelloResponse);

  // Store
  rpc StoreHeartbeat(StoreHeartbeatRequest) returns (StoreHeartbeatResponse);
  rpc GetRegionMap(GetRegionMapRequest) returns (GetRegionMapResponse);
  rpc GetStoreMap(GetStoreMapRequest) returns (GetStoreMapResponse);

  rpc CreateStore(CreateStoreRequest) returns (CreateStoreResponse);
}
