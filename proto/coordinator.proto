// Copyright (c) 2023 dingodb.com, Inc. All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "common.proto";

package dingodb.pb.coordinator;

option java_package = "org.dingo.coordinator";
option cc_generic_services = true;

// Store report self status and region (this node is leader) status
message StoreHeartbeatRequest {
  dingodb.pb.common.Epoch self_storemap_epoch =
      1;  // storemap epoch in this Store
  dingodb.pb.common.Epoch self_regionmap_epoch =
      2;                              // regionmap epoch in this Store
  dingodb.pb.common.Store store = 3;  // self store info
  repeated dingodb.pb.common.Region regions = 4;  // self region info
}

message StoreHeartbeatResponse {
  dingodb.pb.common.Epoch storemap_epoch = 1;   // the lates epoch of storemap
  dingodb.pb.common.Epoch regionmap_epoch = 2;  // the lates epoch of regionmap
  dingodb.pb.common.StoreMap storemap = 3;      // new storemap
  dingodb.pb.common.RegionMap regionmap = 4;    // new regionmap
}

message HelloRequest {
  uint64 hello = 1;
}

message HelloResponse {
  dingodb.pb.common.CoordinatorStatus status = 1;
  string status_detail = 2;
}

service CoordinatorService {
  // Hello
  rpc Hello(HelloRequest) returns (HelloResponse);
  rpc StoreHearbeat(StoreHeartbeatRequest) returns (HelloResponse);
  rpc GetRegionMap(dingodb.pb.common.Epoch) returns (
      dingodb.pb.common.RegionMap);  // the parameter dingodb.pb.common.Epoch is
                                     // the epoch of map the store has now
  rpc GetStoreMap(dingodb.pb.common.Epoch) returns (
      dingodb.pb.common.StoreMap);  // the parameter dingodb.pb.common.Epoch is
                                    // the epoch of map the store has now
}
