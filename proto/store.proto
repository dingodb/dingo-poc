// Copyright (c) 2023 dingodb.com, Inc. All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax="proto3";

import "common.proto";

package dingodb.pb.store;

option java_package = "io.dingodb.store";
option cc_generic_services = true;


message AddRegionRequest {
    dingodb.pb.common.RegionInfo region_info        = 1;
}

message AddRegionResponse {
}

message DestroyRegionRequest {
  uint64 region_id               = 1;
}

message DestroyRegionResponse {
}

message KvGetRequest {
  uint64 region_id                = 1;
  bytes key                       = 2;
}

message KvGetResponse {
  bytes value                     = 2;
}

message KvPutRequest {
  uint64 region_id                = 1;
  bytes key                       = 2;
  bytes value                     = 3;
}

message KvPutResponse {
}

message KvBatchPutIfAbsentRequest {
  uint64 region_id                                       = 1;
  repeated dingodb.pb.common.KeyValue kvs                = 2;
}


message KvBatchPutIfAbsentResponse {
  repeated bytes put_keys      = 1;
}

service StoreService {
  // region
  rpc AddRegion(AddRegionRequest) returns(AddRegionResponse);
  rpc DestroyRegion(DestroyRegionRequest) returns(DestroyRegionResponse);

  // kv
  rpc KvGet(KvGetRequest) returns(KvGetResponse);
  rpc KvPut(KvPutRequest) returns(KvPutResponse);
  rpc KvBatchPutIfAbsent(KvBatchPutIfAbsentRequest) returns(KvBatchPutIfAbsentResponse);
};
